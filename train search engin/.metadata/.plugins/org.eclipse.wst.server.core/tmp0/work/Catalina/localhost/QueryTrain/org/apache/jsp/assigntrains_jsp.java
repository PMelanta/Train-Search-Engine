/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M13
 * Generated at: 2018-12-03 16:43:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import dbconnect.DAO_Implement;

public final class assigntrains_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("dbconnect.DAO_Implement");
    _jspx_imports_classes.add("java.sql.ResultSet");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("<title>Traveling Train</title>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\" />\r\n");
      out.write("<link href=\"css/assigntrains.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/assigntrains.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"Container\">\r\n");
      out.write("\t\t<div id=\"header_\">\r\n");
      out.write("\t\t\t&nbsp;\r\n");
      out.write("\t\t\t<ul class=\"navi\">\r\n");
      out.write("\t\t\t\t<li><a href=\"managetrains.jsp\">TRAINS</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"managestations.jsp\">STATIONS</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"assigntrains.jsp\">ASSIGN TRAINS</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"viewtrains.jsp\">VIEW TRAINS</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"index.jsp\">LOGOUT</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<h2\r\n");
      out.write("\t\t\tstyle=\"color: #CCFF66; margin-left: 250px; font-family: monospace; font-weight: bold; font-size: 30px;\">MANAGE\r\n");
      out.write("\t\t\tSTATIONS</h2>\r\n");
      out.write("\t\t");

			DAO_Implement dao = new DAO_Implement();
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<form onsubmit=\"return onnodes();\">\r\n");
      out.write("\t\t\t<table style=\"margin-top: 50px; margin-left: -100px;\"\r\n");
      out.write("\t\t\t\tcellspacing=\"15\">\r\n");
      out.write("\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td\r\n");
      out.write("\t\t\t\t\t\t\tstyle=\"font-size: 30px; font-weight: bold; color: blue; font-family: monospace;\"\r\n");
      out.write("\t\t\t\t\t\t\tcolspan=\"2\">ASSIGN TRAINS</td>\r\n");
      out.write("\t\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td\r\n");
      out.write("\t\t\t\t\t\tstyle=\"color: #734633; font-weight: bold; font-size: 20px; color: #FFCC00; font-family: monospace;\">SOURCE</td>\r\n");
      out.write("\t\t\t\t\t<td\r\n");
      out.write("\t\t\t\t\t\tstyle=\"color: #734633; font-weight: bold; font-size: 20px; color: #FFCC00; font-family: monospace;\">DESTINATION</td>\r\n");
      out.write("\t\t\t\t\t<td\r\n");
      out.write("\t\t\t\t\t\tstyle=\"color: #734633; font-weight: bold; font-size: 20px; color: #FFCC00; font-family: monospace;\">TRAIN\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td\r\n");
      out.write("\t\t\t\t\t\tstyle=\"color: #734633; font-weight: bold; font-size: 20px; color: #FFCC00; font-family: monospace;\">STATION\r\n");
      out.write("\t\t\t\t\t\tPOINTS</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t");

						if (request.getParameter("source") != null) {

							String source = request.getParameter("source");
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" id=\"source\" name=\"source\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"width: 200px; height: 25px; border-radius: 10px; font-size: 20px; font-weight: bold;\"\r\n");
      out.write("\t\t\t\t\t\tvalue=\"");
      out.print(source);
      out.write("\" required=\"\"></input></td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						} else {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" id=\"source\" name=\"source\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"width: 200px; height: 25px; border-radius: 10px; font-size: 20px; font-weight: bold;\"\r\n");
      out.write("\t\t\t\t\t\trequired=\"\"></input></td>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						if (request.getParameter("destination") != null) {
							String des = request.getParameter("destination");
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" id=\"destination\" name=\"destination\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"width: 200px; height: 25px; border-radius: 10px; font-size: 20px; font-weight: bold;\"\r\n");
      out.write("\t\t\t\t\t\tvalue=\"");
      out.print(des);
      out.write("\" required=\"\"></input></td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						} else {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" id=\"destination\" name=\"destination\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"width: 200px; height: 25px; border-radius: 10px; font-size: 20px; font-weight: bold;\"\r\n");
      out.write("\t\t\t\t\t\trequired=\"\"></input></td>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<td><select id=\"trains\" name=\"trains\" required=\"required\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"height: 30px; font-weight: bold; width: 200px; border-radius: 10px;\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"\">Select Train</option>\r\n");
      out.write("\t\t\t\t\t\t\t");

								int trainid = 0;
								if (request.getParameter("trains") != null) {
									trainid = Integer.parseInt(request.getParameter("trains"));
								}

								ResultSet set = dao.getData("select * from trains");
								while (set.next()) {
									if (trainid == set.getInt("trainid")) {
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"");
      out.print(set.getInt("trainid"));
      out.write("\"\r\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"font-weight: bold; font-size: 15px;\" selected=\"selected\">");
      out.print(set.getString("trainname"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t\t\t");

								} else {
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"");
      out.print(set.getInt("trainid"));
      out.write("\"\r\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"font-weight: bold; font-size: 15px;\">");
      out.print(set.getString("trainname"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t\t\t");

								}
								}
							
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t\t\t");

						if (request.getParameter("points") != null) {
							String points = request.getParameter("points");
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" id=\"points\" name=\"points\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"width: 200px; height: 25px; border-radius: 10px; font-size: 20px; font-weight: bold;\"\r\n");
      out.write("\t\t\t\t\t\tvalue=\"");
      out.print(points);
      out.write("\" required=\"\"></input></td>\r\n");
      out.write("\t\t\t\t\t");

						} else {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" id=\"points\" name=\"points\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"width: 200px; height: 25px; border-radius: 10px; font-size: 20px; font-weight: bold;\"\r\n");
      out.write("\t\t\t\t\t\trequired=\"\"></input></td>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<td><input type=\"submit\" id=\"submit\" name=\"submit\"\r\n");
      out.write("\t\t\t\t\t\tvalue=\"SUBMIT\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"float: right; font-weight: bold; color: white; background: #82ab01; height: 30px; width: 100px; border-radius: 10px;\"></input></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<table style=\"margin: auto; margin-top: 50px;\" cellspacing=\"15\">\r\n");
      out.write("\t\t\t\t");

					if (request.getParameter("points") != null) {
						int points = Integer.parseInt(request.getParameter("points"));
				
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td\r\n");
      out.write("\t\t\t\t\t\tstyle=\"color: #734633; font-weight: bold; font-size: 20px; color: #FFCC00; font-family: monospace;\">STATIONS</td>\r\n");
      out.write("\t\t\t\t\t<td\r\n");
      out.write("\t\t\t\t\t\tstyle=\"color: #734633; font-weight: bold; font-size: 20px; color: #FFCC00; font-family: monospace;\">ARRIVAL\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td\r\n");
      out.write("\t\t\t\t\t\tstyle=\"color: #734633; font-weight: bold; font-size: 20px; color: #FFCC00; font-family: monospace;\">DEPARTURE</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t");

					for (int i = 1; i <= points; i++) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><select id=\"routes\" name=\"routes\" required=\"required\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"height: 30px; font-weight: bold; width: 200px; border-radius: 10px;\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"\">Select Stop</option>\r\n");
      out.write("\t\t\t\t\t\t\t");

								ResultSet resultSet = dao.getData("select * from stations");
										while (resultSet.next()) {
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"");
      out.print(resultSet.getInt("stationid"));
      out.write("\"\r\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"font-weight: bold; font-size: 15px;\">");
      out.print(resultSet.getString("stationname"));
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t\t\t");

								}
							
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</select></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" id=\"arrivaltime\" name=\"arrivaltime\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"width: 200px; height: 25px; border-radius: 10px; font-size: 20px; font-weight: bold;\"></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" id=\"departuretime\" name=\"departuretime\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"width: 200px; height: 25px; border-radius: 10px; font-size: 20px; font-weight: bold;\"></td>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"submit\" id=\"save\" name=\"save\" value=\"SAVE\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"float: right; font-weight: bold; color: white; background: #82ab01; height: 30px; width: 100px; border-radius: 10px;\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t");

			if (request.getParameter("save") != null) {

				String source = request.getParameter("source");
				String des = request.getParameter("destination");
				int traind = Integer.parseInt(request.getParameter("trains"));
				int points = Integer.parseInt(request.getParameter("points"));
				String route[] = request.getParameterValues("routes");
				String arrtime[] = request.getParameterValues("arrivaltime");
				String deptime[] = request.getParameterValues("departuretime");

				String sql = "insert into assigntrains (source , destination , trainid , points) values ('" + source
						+ "' , '" + des + "' , '" + traind + "' , '" + points + "')";
				int res = dao.putData(sql);
				if (res > 0) {
					int assignid = 0;
					String qry = "SELECT assignid FROM assigntrains ORDER BY assignid DESC LIMIT 1";
					ResultSet resultSet = dao.getData(qry);
					while (resultSet.next()) {
						assignid = resultSet.getInt("assignid");
					}

					for (int i = 0; i < route.length; i++) {
						String query = "insert into routes ( stationid , assignid , arrival , dept) values ( '"
								+ route[i] + "' , " + assignid + " , '" + arrtime[i] + "' , '" + deptime[i] + "')";
						dao.putData(query);
					}
		
      out.write("\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\talert(\"Train Routes has been Sucessfuly Added\");\r\n");
      out.write("\t\t\twindow.location.href = \"assigntrains.jsp\";\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t\t");

			} else {

				}
			}
		
      out.write("\r\n");
      out.write("\t\t<div id=\"footercus_\">&nbsp;</div>\r\n");
      out.write("\t\t<div id=\"footercus_\">&nbsp;</div>\r\n");
      out.write("\t\t<div id=\"footercus_\">&nbsp;</div>\r\n");
      out.write("\t\t<div id=\"footercus_\">&nbsp;</div>\r\n");
      out.write("\t\t<div id=\"footercus_\">&nbsp;</div>\r\n");
      out.write("\t\t<div id=\"footer2_\">\r\n");
      out.write("\t\t\t<center>\r\n");
      out.write("\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\tThis template is under the Creative Commons Attribution 2.5\r\n");
      out.write("\t\t\t\t\tLicense.<br /> <br /> <span> <font color=\"white\">Copyright\r\n");
      out.write("\t\t\t\t\t\t\t2018-2019 Train Search Engine</font>\r\n");
      out.write("\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t</p>\r\n");
      out.write("\t\t\t</center>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
